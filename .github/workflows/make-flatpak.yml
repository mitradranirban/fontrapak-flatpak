name: Build Flatpak

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  flatpak-builder:
    runs-on: ubuntu-latest # Specifies the runner environment
    container: # Defines a Docker container to run steps in
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged # --privileged is often needed for Flatpak builds in containers

    steps:
      - uses: actions/checkout@v4 # Checks out your repository code
        with:
          submodules: recursive # Ensures any submodules are also checked out
          fetch-depth: 0 # Fetch full history for git operations

      - name: Pre-download FontraPak TGZ # Step to download the tarball before the Flatpak build environment is fully active
        run: |
          mkdir -p ./downloads # Create a directory to store the downloaded file
          curl -L https://fonts.atipra.in/fontrapak/fontrapak.tgz -o ./downloads/fontrapak.tgz
        timeout-minutes: 10 # Sets a timeout for this step to prevent indefinite hanging

      - name: Set up Flatpak repository # Adds Flathub remote and installs necessary SDKs/Platforms
        run: |
          flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08

      - name: Build Flatpak # The core Flatpak build step
        run: |
          # Copy the pre-downloaded tarball to the repository root for flatpak-builder to find
          cp ./downloads/fontrapak.tgz ./fontrapak.tgz
          flatpak-builder --repo=repo --force-clean build-dir fontrapak.yml
          flatpak build-bundle repo fontra-pak.flatpak xyz.fontra.FontraPak

      - name: Upload Flatpak bundle # Uploads the built Flatpak as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: fontra-pak-flatpak
          path: fontra-pak.flatpak

      # --- New Section: Extract Version, Create Git Tag, and GitHub Release ---

      - name: Extract version from fontrapak.tgz # Extracts the version string from the tarball
        id: get_version # Assigns an ID to this step to reference its outputs
        run: |
          # Create a temporary directory for extraction
          mkdir -p ./extracted_fontrapak
          # Extract only the 'fontrapak/version.txt' file to the temporary directory
          # --no-same-owner is crucial to avoid permission errors in the sandbox
          tar --no-same-owner -xzf fontrapak.tgz -C ./extracted_fontrapak fontrapak/version.txt
          # Read the version string, remove any leading/trailing whitespace, and set it as a step output
          VERSION=$(cat ./extracted_fontrapak/fontrapak/version.txt | tr -d '[:space:]')
          echo "Extracted Version: $VERSION"
          echo "TAG_NAME=$VERSION" >> $GITHUB_OUTPUT # Set the TAG_NAME as a step output

      - name: Configure Git # Configure Git inside the container
        if: success() && steps.get_version.outputs.TAG_NAME != ''
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Create Git Tag # Creates an annotated Git tag
        # This step runs only if the previous steps were successful AND a TAG_NAME was extracted
        if: success() && steps.get_version.outputs.TAG_NAME != ''
        run: |
          TAG_NAME=${{ steps.get_version.outputs.TAG_NAME }}
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists, skipping tag creation"
          else
            echo "Creating tag $TAG_NAME"
            git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
            git push origin "$TAG_NAME"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release # Creates a new GitHub Release
        # This step runs only if the previous steps were successful AND a TAG_NAME was extracted
        if: success() && steps.get_version.outputs.TAG_NAME != ''
        uses: softprops/action-gh-release@v2 # Uses a popular action for creating GitHub Releases
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }} # Sets the release tag
          name: Release ${{ steps.get_version.outputs.TAG_NAME }} # Sets the release title
          body: | # Sets the release description
            Flatpak bundle for FontraPak version ${{ steps.get_version.outputs.TAG_NAME }}.
            Built on GitHub Actions.
          files: fontra-pak.flatpak
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provides the GitHub token for authentication
