name: Update Release Download Count in README

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sunday at 00:00 UTC
  workflow_dispatch:  # Allows manual run

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Get total downloads of releases
        id: get_downloads
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch releases via API and sum download counts
          total=0
          page=1
          while :; do
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/mitradranirban/fontrapak-flatpak/releases?per_page=100&page=$page")
              if ! echo "$response" | jq -e 'type=="array"' >/dev/null; then
              echo "Unexpected response from GitHub API:"
              echo "$response"
              exit 1
            fi
            count=$(echo "$response" | jq '[.[] | .assets[]?.download_count] | add // 0')
            if [[ "$count" == "null" ]]; then count=0; fi
            releases_count=$(echo "$response" | jq 'length')
            if [[ "$releases_count" -eq 0 || "$releases_count" -lt 100 ]]; then
              total=$((total + count))
              break
            fi
            if [[ "$response" == "[]" ]]; then break; fi
            total=$((total + count))
            ((page++))
          done
          echo "total_downloads=$total" >> $GITHUB_OUTPUT

      - name: Update README with download count
        run: |
          # Prepare the line to add/update in README.md
          line="**Total release downloads:** ${{ steps.get_downloads.outputs.total_downloads }}"
          # Define the marker line (e.g., <!--DOWNLOAD_COUNT-->)
          marker="<!--DOWNLOAD_COUNT-->"
          # Check if marker exists, then update the line below it or append
          if grep -q "$marker" README.md; then
            # Replace the line after marker with new line
            sed -i "/$marker/{n;s/.*/$line/;}" README.md
          else
            # Append marker and line at the end
            echo -e "\n$marker\n$line" >> README.md
          fi

      - name: Commit and push changes if any
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n $(git status -s) ]]; then
            git add README.md
            git commit -m "Update total release downloads count in README"
            git push
          else
            echo "No changes to commit"
          fi
          
